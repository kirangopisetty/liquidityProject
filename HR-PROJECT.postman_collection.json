{
	"info": {
		"_postman_id": "f5105fff-22aa-420b-8f53-e962fbc28ae5",
		"name": "HR-PROJECT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522"
	},
	"item": [
		{
			"name": "SMOKE TESTING",
			"item": [
				{
					"name": "LOGIN API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS-PAGE-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if page=1 & per_page=6\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.page).to.eql(1);\r",
									"    pm.expect(jsonData.per_page).to.eql(6);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if page value is a number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.page).to.be.a('number');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if first_name is a string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].first_name).to.be.a('string');\r",
									"    pm.expect(jsonData.data[1].first_name).to.be.a('string');\r",
									"    pm.expect(jsonData.data[2].first_name).to.be.a('string');\r",
									"    pm.expect(jsonData.data[3].first_name).to.be.a('string');\r",
									"    pm.expect(jsonData.data[4].first_name).to.be.a('string');\r",
									"    pm.expect(jsonData.data[5].first_name).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if first_name is a string-using for loop\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    for (i=0;i<=5;i++) \r",
									"    {\r",
									"        pm.expect(jsonData.data[i].first_name).to.be.a('string');\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS-PAGE-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SINGLE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"job\");\r",
									"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"// to extract id\r",
									"myExtractedResponse = JSON.parse(responseBody);\r",
									"myExtractedID = myExtractedResponse.id;\r",
									"pm.globals.set(\"globalID\", myExtractedID);\r",
									"\r",
									"// to extract name\r",
									"myExtractedName = myExtractedResponse.name;\r",
									"pm.globals.set(\"globalName\", myExtractedName);\r",
									"\r",
									"// to extract job\r",
									"myExtractedJob = myExtractedResponse.job;\r",
									"pm.globals.set(\"globalJob\", myExtractedJob);\r",
									"\r",
									"\r",
									"if (pm.response.code==201) {\r",
									"    // execute next API-update user API\r",
									"    postman.setNextRequest(\"UPDATE USER\");\r",
									"}\r",
									"else {\r",
									"    // stop the test execution\r",
									"    postman.setNextRequest(\"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"job\": \"{{$randomJobType}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"job\");\r",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"if (pm.response.code==200) {\r",
									"    // execute the next API-Delete User API\r",
									"    postman.setNextRequest(\"DELETE USER\");\r",
									"}\r",
									"else {\r",
									"    // stop the test execution\r",
									"    postman.setNextRequest(\"\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{globalName}}\",\r\n    \"job\": \"Sr.{{globalJob}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server header is missing\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is empty\", function () {\r",
									"    pm.response.to.have.body(\"\");\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									"\r",
									"if (pm.response.code==204) {\r",
									"    postman.setNextRequest(\"\");\r",
									"}\r",
									"else {\r",
									"    postman.setNextRequest(\"DELETE USER\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PERFORMANCE TESTING",
			"item": [
				{
					"name": "LOGIN API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS-PAGE-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users?page=1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS-PAGE-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SINGLE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users/{{empID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{empID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// to extract id\r",
									"myExtractedResponse = JSON.parse(responseBody);\r",
									"myExtractedID = myExtractedResponse.id;\r",
									"pm.globals.set(\"globalID\", myExtractedID);\r",
									"\r",
									"// to extract name\r",
									"myExtractedName = myExtractedResponse.name;\r",
									"pm.globals.set(\"globalName\", myExtractedName);\r",
									"\r",
									"// to extract job\r",
									"myExtractedJob = myExtractedResponse.job;\r",
									"pm.globals.set(\"globalJob\", myExtractedJob);\r",
									"\r",
									"\r",
									"if (pm.response.code==201) {\r",
									"    // execute next API-update user API\r",
									"    postman.setNextRequest(\"UPDATE USER\");\r",
									"}\r",
									"else {\r",
									"    // stop the test execution\r",
									"    postman.setNextRequest(\"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"job\": \"{{$randomJobType}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code==200) {\r",
									"    // execute the next API-Delete User API\r",
									"    postman.setNextRequest(\"DELETE USER\");\r",
									"}\r",
									"else {\r",
									"    // stop the test execution\r",
									"    postman.setNextRequest(\"\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{globalName}}\",\r\n    \"job\": \"Sr.{{globalJob}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code==204) {\r",
									"    postman.setNextRequest(\"\");\r",
									"}\r",
									"else {\r",
									"    postman.setNextRequest(\"DELETE USER\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "User-Agent",
								"value": "{{$randomUserAgent}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users/{{globalID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Verify if response code = 2xx\", function () {",
							"    pm.response.to.be.success;",
							"});",
							"",
							"pm.test(\"Verify if response time < 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Verify that the response code !=4xx and/or 5xx\", function () {",
							"    pm.response.to.not.be.error;",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "NEGATIVE TESTING",
			"item": [
				{
					"name": "HTTP METHOD TAMPERING",
					"item": [
						{
							"name": "LIST USERS-METHOD TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LIST USERS-METHOD-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-METHOD-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx error\", function () {\r",
											"    pm.response.to.be.clientError();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Tamar\",\r\n    \"job\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PAYLOAD TAMPERING",
					"item": [
						{
							"name": "CREATE USER-PAYLOAD-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx error\", function () {\r",
											"    pm.response.to.be.clientError\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Tamar\",\r\n    \"job\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-PAYLOAD_TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"Developer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-PAYLOAD-_TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-PAYLOAD__TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code is 4xx error\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Kiran\",\r\n    \"job\": \"Trainer\",\r\n    \"salary\":\"1000000 USD$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "END POINT TAMPERING",
					"item": [
						{
							"name": "UPDATE USER-END-POINT-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rizwan\",\r\n    \"job\": \"Manager\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/two",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"two"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE USER-END-POINT_TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rizwan\",\r\n    \"job\": \"Manager\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/ ",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										" "
									]
								}
							},
							"response": []
						},
						{
							"name": "END-POINT-TAMPERING-SINGLE-USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/two",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"two"
									]
								}
							},
							"response": []
						},
						{
							"name": "END-POINT_TAMPERING-SINGLE-USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/ ",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										" "
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "QUERY PARAM TAMPERING",
					"item": [
						{
							"name": "LIST USERS-QUERY-PARAM-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=two",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "two"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LIST USERS_QUERY-PARAM-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=-2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "-2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "REQUEST HEADERS TAMPERING",
					"item": [
						{
							"name": "CREATE USER-CONTENT-TYPE-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<root>\r\n  <name>Tamar</name>\r\n  <job>Project Manager</job>\r\n</root>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-_CONTENT-TYPE-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<meta charset='UTF-8'>\r\n\t\t\t<title>JSON To HTML using codebeautify.org</title>\r\n\t\t</head>\r\n\t\t<body>\r\n\t\t\t<table border=1>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>name</th>\r\n\t\t\t\t\t\t<th>job</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Tamar</td>\r\n\t\t\t\t\t\t<td>Project Manager</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t<td>&nbsp</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</body>\r\n\t</html>",
									"options": {
										"raw": {
											"language": "html"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER_CONTENT-TYPE-TAMPERING",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code = 4xx\", function () {\r",
											"    pm.response.to.be.clientError;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/plain",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "name  job\r\nTamar  Project Manager",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}